#!/usr/bin/env python

from lib import Config
from lib import Database
from lib import Lodestone
from lib import XIVAPI

db = Database()
config = Config()
ls = Lodestone(config.character(), config.session_id())
api_client = XIVAPI(config.xivapi_key(), config.xivapi_market())

retainers = {
        'f49f0239a5': 'Lominsaret',
        'ad32977801': 'Chimomo',
        '6f49aebcb1': 'Liwita',
        'f2d1754992': 'Chookity',
}

runtime_cache = {}

class Summary:
    number_of_items = 0
    sum_value = 0
    sum_min_value = 0

    def add(self, item, price):
        self.number_of_items += 1
        self.sum_value += item.price * item.quantity
        self.sum_min_value += price['min'] * item.quantity

total_summary = Summary()

for retainer in config.retainer_ids():
    items = ls.on_sale(retainer=retainer)
    print(f"\n# {retainers[retainer]}\n")

    summary = Summary()
    for item in items:
        if item.name in runtime_cache:
            price = runtime_cache[item.name]
        else:
            price = api_client.price(item.name)
            runtime_cache[item.name] = price

        grade = 'hq' if item.isHQ else 'nq'
        price = price[grade]

        summary.add(item, price)
        total_summary.add(item, price)
        print(
            "  {:2d}x {:1s}{:40s} {:8d} => {:8d} | {:8d} => {:8d}".format(
                item.quantity, ("*" if item.isHQ else " "), item.name,
                item.price, item.price * item.quantity,
                price['min'], price['min'] * item.quantity
                )
            )
    print("  {:2d}x {:1s}{:40s} {:8s}    {:8d} | {:8s}    {:8d}".format(
        summary.number_of_items,
        "", "", "", summary.sum_value,
        "", summary.sum_min_value
    ))
print("\n  {:2d}x {:1s}{:40s} {:8s}    {:8d} | {:8s}    {:8d}".format(
    total_summary.number_of_items,
    "", "", "", total_summary.sum_value,
    "", total_summary.sum_min_value
))
