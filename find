#!/usr/bin/env python

from lib import Config
from lib import Database
from lib import Item
from lib import XIVAPI
import sys

config = Config()
db = Database()
api_client = XIVAPI(config.xivapi_key(), config.xivapi_market())

def fetch_ingredients(recipe_id, db):
  ing = {}
  for row in db.execute(
          f'''select * from ingredients where recipe_id = '{recipe_id}';'''):
    ing[row[1]] = row[2]
  return ing

def find_item(id, db):
  for item in db.execute(f'''select * from items where id = '{id}';'''):
    return Item.from_db_row(item)


def print_item_tree(item, db, quantity = 1, indentation_level=0):
  indent = '    ' * indentation_level
  q = '{:3d}x '.format(quantity)
  price = api_client.price(item.name)
  pricetag = f'HQ:{price["hq"]["min"]}/NQ:{price["nq"]["min"]}'
  pricetag_qty = f'HQ:{price["hq"]["min"]*quantity}/NQ:{price["nq"]["min"]*quantity}'
  print(f'{indent}{q}[{item.job}::{item.level}] {item.name}  -> {pricetag} -> sum:{pricetag_qty}')
  item.ingredients = fetch_ingredients(item.recipe_id, db)
  for key in item.ingredients:
    ing = find_item(key, db)
    print_item_tree(ing, db, quantity*item.ingredients[key], indentation_level+1)

try:
    name = sys.argv[1]
except:
    print(f"help > {sys.argv[0]} <item>")
    sys.exit(0)

for item in db.execute(f'''select * from items where name like '%{name}%';'''):
  print_item_tree(Item.from_db_row(item), db)

